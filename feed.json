{
    "version": "https://jsonfeed.org/version/1",
    "title": "Powered By Hexo&Shoka",
    "subtitle": "JoyseeKingの妙妙屋",
    "icon": "http://joyseeking.github.io/images/favicon.ico",
    "description": "Iot cloud senior engineer, cyber dreamtist, code is warm </br> 物联网云端高级开发工程师 赛博理想主义者 代码是有温度的",
    "home_page_url": "http://joyseeking.github.io",
    "items": [
        {
            "id": "http://joyseeking.github.io/2024/09/04/Loki/",
            "url": "http://joyseeking.github.io/2024/09/04/Loki/",
            "title": "Loki安装与采集流程",
            "date_published": "2024-09-04T03:34:38.798Z",
            "content_html": "<h1 id=\"helm安装loki以及使用promtail进行日志采集弹性集群\"><a class=\"anchor\" href=\"#helm安装loki以及使用promtail进行日志采集弹性集群\">#</a> Helm 安装 Loki 以及使用 Promtail 进行日志采集（弹性集群）</h1>\n<p>安装环境：阿里云 ACK 集群 k8s 版本 1.28 Worker 节点 3 推荐单节点 4C16G 以上</p>\n<h2 id=\"helm更新\"><a class=\"anchor\" href=\"#helm更新\">#</a> helm 更新</h2>\n<p>首先更新 Helm 源</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>helm repo <span class=\"token function\">add</span> grafana https://grafana.github.io/helm-charts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>helm repo update</pre></td></tr></table></figure><h2 id=\"helm安装配置s3使用阿里云oss\"><a class=\"anchor\" href=\"#helm安装配置s3使用阿里云oss\">#</a> helm 安装配置 s3（使用阿里云 OSS）</h2>\n<p>阿里云 OSS 兼容 S3 的配置 需要提前创建三个 Loki 需要使用的 Bucket<br />\n 分别名称为 xxx-chunks xxx-ruler xxx-admin</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">loki</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">commonConfig</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">replication_factor</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">schemaConfig</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2024-01-01\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">store</span><span class=\"token punctuation\">:</span> tsdb</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">index</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">prefix</span><span class=\"token punctuation\">:</span> loki_index_</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">period</span><span class=\"token punctuation\">:</span> 24h *<span class=\"token comment\">#这里设置 oss 内日志保留的日期 24h 30d</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">object_store</span><span class=\"token punctuation\">:</span> s3</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span> v13</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> s3</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">bucketNames</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">chunks</span><span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">-</span>loki<span class=\"token punctuation\">-</span>chunks</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">ruler</span><span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">-</span>loki<span class=\"token punctuation\">-</span>ruler</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">-</span>loki<span class=\"token punctuation\">-</span>admin</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">s3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token key atrule\">endpoint</span><span class=\"token punctuation\">:</span> oss<span class=\"token punctuation\">-</span>cn<span class=\"token punctuation\">-</span>beijing<span class=\"token punctuation\">-</span>internal.aliyuncs.com  <span class=\"token comment\">#阿里云的 endpoint 地址 这里用的内网因为在 VPC 内部署的 K8s 网络</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> cn<span class=\"token punctuation\">-</span>beijing <span class=\"token comment\">#region 不设置也可以</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token key atrule\">secretAccessKey</span><span class=\"token punctuation\">:</span> sxxxxxxxxxxxx  <span class=\"token comment\">#SecretKey</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token key atrule\">accessKeyId</span><span class=\"token punctuation\">:</span> LTAxxxxxxxxxxxxxxxx <span class=\"token comment\">#KeyId</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token key atrule\">s3ForcePathStyle</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token key atrule\">insecure</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key atrule\">deploymentMode</span><span class=\"token punctuation\">:</span> SimpleScalable <span class=\"token comment\">#部署模式选简单可伸缩</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#后端部署</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token comment\">#副本数量</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token key atrule\">persistence</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这块是自定义挂载卷后面会解释为何这么配置</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token key atrule\">storageClass</span><span class=\"token punctuation\">:</span> alibabacloud<span class=\"token punctuation\">-</span>cnfs<span class=\"token punctuation\">-</span>nas</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> 5Gi</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token key atrule\">read</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#只读 Pod</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key atrule\">write</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#写 Pod 这是个有状态副本</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token key atrule\">persistence</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token key atrule\">storageClass</span><span class=\"token punctuation\">:</span> alibabacloud<span class=\"token punctuation\">-</span>cnfs<span class=\"token punctuation\">-</span>nas <span class=\"token comment\">#这块是自定义挂载卷后面会解释为何这么配置</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> 5Gi</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token key atrule\">singleBinary</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token key atrule\">minio</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#关闭 minio 存储 这是一个本地类似 S3 结构的文件存储库 不推荐线上使用</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token key atrule\">ingester</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token key atrule\">querier</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token key atrule\">queryFrontend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token key atrule\">queryScheduler</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token key atrule\">distributor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token key atrule\">compactor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token key atrule\">indexGateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token key atrule\">bloomCompactor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token key atrule\">bloomGateway</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>首先到文档列表中获取 Object Storage Configuration<br />\n 链接贴上 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2xva2kvbGF0ZXN0L3NldHVwL2luc3RhbGwvaGVsbS9pbnN0YWxsLXNjYWxhYmxlLw==\">helm 安装弹性集群</span></p>\n<p>一些详细的配置修改可以参考这个链接 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2xva2kvbGF0ZXN0L3NldHVwL2luc3RhbGwvaGVsbS9yZWZlcmVuY2Uv\">helm 安装 chart—values 设置</span></p>\n<p>修改完之后将文件存储为 values.yaml 但现在不能直接应用需要考虑以下两个问题</p>\n<h3 id=\"1阿里云设置卷对应的默认存储\"><a class=\"anchor\" href=\"#1阿里云设置卷对应的默认存储\">#</a> 1. 阿里云设置卷对应的默认存储</h3>\n<p>由于无状态的 backend 及有状态的 write 需要提供卷存储</p>\n<p>backend 需要提供 BoltDB Shipper 的磁盘空间本地缓存数据 并定期上传至 S3 中</p>\n<p>write 则需要将 log 数据暂存在磁盘中 写入数据库后清除缓存</p>\n<p>由于以上问题 我们需要检查阿里云 ACK 中是否存在未使用的存储类 如有直接修改 value.yml 反之请创建存储类 大小建议在 20GB 以上 修改 value.yml 指定刚创建的的存储类名称</p>\n<h3 id=\"2阿里云拉取镜像问题\"><a class=\"anchor\" href=\"#2阿里云拉取镜像问题\">#</a> 2. 阿里云拉取镜像问题</h3>\n<p>自 Docker 关闭中国境内的镜像源之后 大部分镜像都需要挂代理获取</p>\n<p>现在的方案为 docker.io 内的镜像直接使用 DaoCloud 的镜像仓库 非 docker.io 的镜像将使用代理服务器或海外服务器拉取镜像并上传至私人 Docker Registy 仓库</p>\n<p>我的方案代理服务器拉取的镜像 push 到将是阿里云的镜像仓库产品个人版 将 value.yml 对应的例如（loki.image.registry loki.image.repository） 镜像修改成阿里云镜像仓库的地址</p>\n<p>当然可以尝试下更换 <a href=\"%22https://helm-charts.itboon.top/docs/grafana/loki-stack/%22\">Helm Charts 仓库</a></p>\n<h3 id=\"3配置免密组件sa豁免\"><a class=\"anchor\" href=\"#3配置免密组件sa豁免\">#</a> 3. 配置免密组件 SA 豁免</h3>\n<p>关于阿里云镜像问题还需要注意一个很重要的点 第三方 helm 安装的应用如果使用自己账号内镜像仓库的镜像 如果之前配置了免密插件拉取镜像 需要设置对应 SA 或者为豁免所有 SA 的使用组件的权限</p>\n<p><img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/1724910757336.jpg\" alt=\"免密组件\" /></p>\n<p>这个组件安装的位置在 kube-system 下 相关配置查看配置文件名称</p>\n<p><img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/1724919251442.jpg\" alt=\"组件配置\" /></p>\n<p>将 yaml 中  watch-namespace 修改成 all 并重启 acr 免密组件</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">acr-api-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2018-12-01'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">acr-registry-info</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    - instanceId: \"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">expiring-threshold</span><span class=\"token punctuation\">:</span> 15m</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">service-account</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">watch-namespace</span><span class=\"token punctuation\">:</span> all</pre></td></tr></table></figure><h3 id=\"4关闭验证与x-scope-orgid\"><a class=\"anchor\" href=\"#4关闭验证与x-scope-orgid\">#</a> 4. 关闭验证与 X-Scope-OrgID</h3>\n<p>Grafana Loki 是一个多租户系统，不同租户之间的数据隔离，通过 X-Scope-OrgID 标识请求的租户。</p>\n<p>Loki 默认以多租户模式运行 auth_enabled: true。promtail 和 Grafana 均需要验证才能访问</p>\n<p>Grafana 租户查询隔离时，可以在 Grafana 设置 DataSource 中根据 HTTP 标头中的 X-Scope-OrgID 区分查询。</p>\n<p>如果设置 auth_enabled: false Loki 将不进行验证 租户 ID 将设为 fake</p>\n<h1 id=\"安装promtail-damonset\"><a class=\"anchor\" href=\"#安装promtail-damonset\">#</a> 安装 Promtail Damonset</h1>\n<p>设置 grafana helm 仓库</p>\n<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\n</code></pre>\n<p>设置 Loki 后端地址</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">clients</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//loki<span class=\"token punctuation\">-</span>gateway/loki/api/v1/push</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">tenant_id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p>安装 protail daemonset</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>helm upgrade --values values.yaml --install promtail grafana/promtail</pre></td></tr></table></figure><p>设置 Loki 限流<br />\n使用默认的 limits_config 的配置在 Loki 后端中会出现以下的的错误</p>\n<pre><code>promptail-http-status-429-too-many-requests\nmsg=&quot;error sending batch, will retry&quot; status=429 error=&quot;server returned HTTP status 429 Too Many Requests (429): Maximum active stream limit exceeded, reduce the number of active streams\n</code></pre>\n<p>根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2xva2kvbGF0ZXN0L2NvbmZpZ3VyZS8jbGltaXRzX2NvbmZpZw==\">限流配置</span>调整以下配置</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">limits_config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">#摄取器速率</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">ingestion_rate_mb</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#摄取器极限速率</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">ingestion_burst_size_mb</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  流</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">per_stream_rate_limit</span><span class=\"token punctuation\">:</span> 512MB</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">per_stream_rate_limit_burst</span><span class=\"token punctuation\">:</span> 1024MB</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">max_entries_limit_per_query</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">max_query_parallelism</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span></pre></td></tr></table></figure><h1 id=\"安装grafana\"><a class=\"anchor\" href=\"#安装grafana\">#</a> 安装 Grafana</h1>\n<p>没什么好说的 helm 直接安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>helm <span class=\"token function\">install</span> grafana grafana/grafana --namespace monitoring</pre></td></tr></table></figure><p>用以下指令获取 grafana 密码</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kubectl get secret --namespace monitoring my-grafana -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;.data.admin-password&#125;\"</span> <span class=\"token operator\">|</span> base64 --decode <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span></pre></td></tr></table></figure><p>之后配置好 Loki 数据源就可以使用 Loki 查询日志了</p>\n<h2 id=\"架构解释\"><a class=\"anchor\" href=\"#架构解释\">#</a> 架构解释</h2>\n<h3 id=\"loki-弹性架构\"><a class=\"anchor\" href=\"#loki-弹性架构\">#</a> Loki 弹性架构</h3>\n<p>Loki 弹性架构由一个复杂的读、写、存、缓存分离架构组成<br />\n<img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/0d0e4e2a76778d250a1d5cf830e19185.png\" alt=\"弹性架构\" /></p>\n<h4 id=\"1节点中的promtail-以daemonset的形式分布在各个节点-用于收集日志将日志push到loki中\"><a class=\"anchor\" href=\"#1节点中的promtail-以daemonset的形式分布在各个节点-用于收集日志将日志push到loki中\">#</a> 1. 节点中的 Promtail 以 DaemonSet 的形式分布在各个节点 用于收集日志将日志 Push 到 Loki 中</h4>\n<p>Promtail 会使用 fsnotify 监听指定目录下的日志文件的创建和删除</p>\n<p>对活跃的日志文件会起一个 goroutine 进行类似 tail -f 的读取，读取到的内容发送给 channel</p>\n<p>会有一个单独的 goroutine 读取 channel 中的日志行 分批处理并进行标签处理后 发送给 Loki</p>\n<p><img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/c783d414bf108d794d59ef6ab72ee7c9.jpeg\" alt=\"promtail 工作流程\" /></p>\n<h4 id=\"2loki内的写流程\"><a class=\"anchor\" href=\"#2loki内的写流程\">#</a> 2.Loki 内的写流程</h4>\n<p>在弹性模式内 gateway 接收到 promtail push 的日志内容之后 会由负载均衡到 write 的多副本中任一副本</p>\n<p>write 副本中具有 Distributor 功能 根据日志中的 TenantID、Labels 计算 Hash 根据 Hash 值分发到不同的 Ingester 上 其次功能还包括验证数据格式 标签预处理 以及速率限制等功能</p>\n<p>write 副本中的 Ingester 会构建及刷新 Chunk 块 所有的 Chunk 块会在本地磁盘缓存（TSDB 的形式） 只有达到容量上限后 Chunk 块设为只读 并发送至 S3 存储端进行存储 并清除指定的 Chuck 信息</p>\n<h4 id=\"3index-tsdb缓存-memcached缓存与rulers\"><a class=\"anchor\" href=\"#3index-tsdb缓存-memcached缓存与rulers\">#</a> 3.Index tsdb 缓存、Memcached 缓存与 Rulers</h4>\n<p>backend 副本会定期到 S3 中下载文件并进行合并、压缩 上传新的 index 到 S3 上 并在本地保存 TSDB cache</p>\n<p>索引网关服务负责处理和提供元数据查询。主要用于 query frontend 查询 Index-Gateway 中的 chunk 引用 其中一部分主要用于指标查询</p>\n<p>memcached 缓存两部分数据一种为 result-cache（查询结果的缓存）和 chunk-cache（由 Ingester 存储后的完整 chunk 缓存） 并在内部维护淘汰策略</p>\n<p>backend 副本中的 Rulers 提供类似 promthus 的 AlertManager 的报警策略 另一方面 ruler 会根据评估标准配置对 query frontend 进行评估</p>\n<h4 id=\"4loki内的查询流程\"><a class=\"anchor\" href=\"#4loki内的查询流程\">#</a> 4.Loki 内的查询流程</h4>\n<p>Loki 的查询一般是 Grafana 前端发出 LogQL 后经由 Gateway 指向 read 副本</p>\n<p>其中 read 副本的 Querier 会解析 LogQL 并从 IndexGateway 中获取索引信息</p>\n<p>优先查询 memcached 的 cache 无法查询到后将指向 S3 中的对应分片进行查询 查询出的结果将会同步结果到 result-cache 以便提高下次查询的速度</p>\n<p><img data-src=\"https://grafana.com/docs/loki/latest/get-started/scalable-monolithic-mode.png\" alt=\"功能模式\" /></p>\n<p><img data-src=\"https://aleiwu.com/img/loki/loki-arch.png\" alt=\"Loki Overview\" /></p>\n<h3 id=\"关于loki-canary\"><a class=\"anchor\" href=\"#关于loki-canary\">#</a> 关于 Loki-Canary</h3>\n<p>Loki-canary 是一个相对独立的组件、主要用于 Loki 集群性能的评估<br />\n Loki-canary 作为 DamonSet 分布在各个节点上 会定期生成日志行 这些日志行会被 Promtail 采集并按照正常流程被 Loki 处理</p>\n<p>Loki-canary 生成的 log 行一般由时间戳及填充字符串构成，之后 Loki Canary 将打开与 Loki 的 WebSocket 连接，并跟踪它创建的日志。当在 WebSocket 上收到日志时，日志消息中的时间戳将与内部数组进行比较，用以评估 Loki 的性能指标。</p>\n<p>Loki-canary 会定期进行抽查 确保曾经上报的日志信息并没有丢失</p>\n<p>除此之外 Loki-canary 进行指标查询 count_over_time 验证 Loki 的日志速率是否与其创建的日志速率是否相对应</p>\n<p><img data-src=\"https://grafana.com/docs/loki/latest/operations/loki-canary/loki-canary-block.png\" alt=\"Loki-canary架构\" /></p>\n",
            "tags": [
                "可观测性",
                "日志",
                "Grafana",
                "loki",
                "grafana"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2024/09/04/Pytorch_multi/",
            "url": "http://joyseeking.github.io/2024/09/04/Pytorch_multi/",
            "title": "Pytorch多卡训练",
            "date_published": "2024-09-04T02:44:41.953Z",
            "content_html": "<p>首先查询是否支持 CUDA 训练 进行指定设备</p>\n<p><code>device = torch.device(&quot;cuda&quot; if torch.cuda.is_available() else &quot;cpu&quot;)</code></p>\n<p>使用 GPU 训练时 需要增加以下代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token comment\"># 如果你有多个 GPU，可以使用 torch.nn.DataParallel 来并行训练 *</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>device_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Let's use </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>device_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> GPUs!\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>DataParallel<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>设置完成后 启动训练时会显示</p>\n<p><img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/code1.png\" alt=\"Untitled\" /></p>\n<p>显卡占用低的 或者 训练时间较慢时的调试</p>\n<p>1. 显存占用低时 需要增加 batch_size</p>\n<p>2. 显卡核心占用低时需要按照实际情况调节 DataLoader 方法内的 nums_worker</p>\n<p><img data-src=\"https://blog-1256634387.cos.ap-shanghai.myqcloud.com/content/code2.png\" alt=\"Untitled\" /></p>\n",
            "tags": [
                "深度学习",
                "Pytorch",
                "Pytorch"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2023/06/15/2023K+%E5%B3%B0%E4%BC%9A%E4%B8%8A%E6%B5%B7%E7%AB%99%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/",
            "url": "http://joyseeking.github.io/2023/06/15/2023K+%E5%B3%B0%E4%BC%9A%E4%B8%8A%E6%B5%B7%E7%AB%99%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/",
            "title": "2023K+峰会上海简单记录",
            "date_published": "2023-06-15T07:20:38.846Z",
            "content_html": "<h1 id=\"llm大模型对软件行业影响\"><a class=\"anchor\" href=\"#llm大模型对软件行业影响\">#</a> LLM 大模型对软件行业影响</h1>\n<p>类似 CopilotX GitHub Next 等代码辅助或 ChatGpt 等 LLM 大模型相关产品 现在主要左右还是知识平权 减少普通人获取知识成本 部分代码生成及辅助功能 会小范围冲击基层程序员就业</p>\n<p>但对于软件工程全流程的需求沟通 需求确认妥协 代码架构设计 及基础设施设计等短期内别无法代替 业务专家职位永远无法替代 AI 减少了软件工程最后一英里的工作量</p>\n<p>暗知识：LLM 始终是理解人写出来的代码 而想的永远比说出来的多 说出来比写出来的多 而理解也会比写出来的会打折扣</p>\n<h1 id=\"b站-混部-hpa-vpa等相关落地\"><a class=\"anchor\" href=\"#b站-混部-hpa-vpa等相关落地\">#</a> B 站 混部 HPA VPA 等相关落地</h1>\n<p>混部：即线上用户业务与离线业务 Job 共同部署在一个物理节点运行 充分利用 CPU Memory 资源 降本增效 使用 kubelet 去拉取 pod agent 上报的实时指标 并反馈给指标 Controller 做分析对比 结合 kube-schedule 做相关副本数量调整</p>\n<p>主要实现方式：对于内部指标做预估 在线上业务低峰期时 在线上集群 运行部分离线计算 Job （CPU 视频转码及大数据处理）提高资源使用率 并且不影响线上 SLO 稳定 分优先级对业务混部做干预 用 cgroup 做 Pod 业务隔离 防止干扰重要线上业务</p>\n<p>GPU 混部：CUDA API 做 GPU 资源预测 将线上训练任务和 NVIDIA CUVID FFMPEG 编解码加速 任务做混部  训练任务预留 1-2GB 显存资源 为编解码任务预留资源</p>\n<p>HPA ： 主要是会对部分实时指标做分析 如上游服务的 CPU QPS 等 然后做动态扩缩容</p>\n<p>CronHPA：对阿里的 CronHPA 做了改进 对于历史指标做分析而不是单独的去按照日常规则直接扩缩容 防止部分不定时的业务高峰或闲时资源浪费</p>\n<p>VPA：自己根据实时指标实现了动态资源 request 调整 显著提高了资源利用率</p>\n<h1 id=\"b站api-gateway实现\"><a class=\"anchor\" href=\"#b站api-gateway实现\">#</a> B 站 API Gateway 实现</h1>\n<p>1）路由：不使用前缀匹配方式 指定到接口级别 效率高 在一定程度上从指标阶段能减少外界扫描干扰 但存在问题需要自行开发控制台 panel 隔离部门及业务避免路由过多难以配置的问题</p>\n<p>2）负载均衡：使用 P2C 方式 依赖简单的单独的一个指标实现 效率及可用性远大与 RR 及 WRR 方案</p>\n<p>3）服务降级熔断：根据指标进行降级 减少影响面 服务完全不可用 部分请求用会启用兜底的历史请求 避免用户完全不可用 Qurota 分布式限流方案 即通过有状态的 一个容量池 下发每一个 pod 接口的限流容量 pod 本身根据自身的限流上线去做限流熔断 避免 redis 等分布式方案打爆的问题</p>\n<p>4）grpc 管理：protobuf 文件使用统一 git 仓代理保存 并使用统一的 protobuild 方式保证文件统一</p>\n<h1 id=\"云闪付可观测性\"><a class=\"anchor\" href=\"#云闪付可观测性\">#</a> 云闪付可观测性</h1>\n<p>整体比较简单易懂 但 ELK（面向运维） 和 Loki（轻量 效率高 面向开发） 日志方案 做混用 各司其职 减少 ELK 资源占用 概念比较新颖</p>\n<h1 id=\"intel-servicemesh\"><a class=\"anchor\" href=\"#intel-servicemesh\">#</a> Intel ServiceMesh</h1>\n<p>主要是社区宣传及介绍 对于个人理解还可以 eBPF 相关 ServiceMesh 可能在未来会有巨大变革</p>\n<h1 id=\"软件质量及敏捷效能提升\"><a class=\"anchor\" href=\"#软件质量及敏捷效能提升\">#</a> 软件质量及敏捷效能提升</h1>\n<p>1）测试与开发 需要注重问题与开发部门挂钩 在软件开发阶段及测试阶段 由开发人员及测试人员共同推进问题 mapping 图 多次积累 在不同项目中共同使用 提高测试效率及问题沟通效率</p>\n<p>适用于当前所有的软件开发及测试 以下为实例</p>\n<table>\n<thead>\n<tr>\n<th>问题描述</th>\n<th>漏洞等级</th>\n<th>涉及部门（多级）</th>\n<th>修复及改进方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>2）软件质量部门 监督软件开发及测试 并推进内部敏捷开发 定期开质量效能会议 对整体软件交付有良好把控 推进包括但不限于以下方案</p>\n<p>tools：所有研发部门 利用 copilot x 等代码生成工具生成自己代码的覆盖单元测试 记录接口测试脚本 并集中提交至指定 git 仓库进行统一维护</p>\n<p>codereview：在 preview 由专人对 feature 及 bugfix 相关代码进行 codereview</p>\n<p>owner 意识 ：质量左移 即自身对软件漏洞做把控 不允许完全将软件质量问题交于测试部门兜底 对其他部门零信任 在软件交付用户前 对质量问题阻断</p>\n<p>例如云端依赖 Devops 、多环境灰度、自动化、指标报警、 相关 SRE 、对于指定问题指定人员解决（专人专办）owner 自身问题 推进其他部门将软件交付测试前 阻断风险的意识</p>\n<p>3）自动化测试介入</p>\n<p>在测试阶段，需要多部门联动自动化测试 对相关 case 进行自动化覆盖 包括但不限于 python 脚本 UI 脚本 可以考虑由 AI 工具生成 Monkey 测试方案进行覆盖 由一般测试人员录制自动化测试脚本 并在多次回归测试利用脚本中提升效能</p>\n<p>4）开源软件漏洞跟踪</p>\n<p>各个部门对自己代码中使用的开源软件及版本进行记录 梳理开源软件 由软件质量监督部门 跟进 CVE 相关漏洞问题 避免出现类似 Log4Shell 相关零日漏洞造成的巨大影响</p>\n<p>5）对部门及个人质量效能评分</p>\n<p>部门将自己的质量及效能提升落地情况定时反馈 拒绝低效研发及测试</p>\n",
            "tags": [
                "个人",
                "线下峰会",
                "峰会纪要"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2023/06/14/etcd_%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0/",
            "url": "http://joyseeking.github.io/2023/06/14/etcd_%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0/",
            "title": "利用etcd实现分布式锁",
            "date_published": "2023-06-14T13:04:40.381Z",
            "content_html": "<h1 id=\"单机锁及现有方案分布式锁介绍\"><a class=\"anchor\" href=\"#单机锁及现有方案分布式锁介绍\">#</a> 单机锁及现有方案分布式锁介绍</h1>\n<p>单机锁: java 常见的有 juc 的 Lock 及 jvm 的 synchronized golang 的 Mutex</p>\n<p>分布式锁：通常使用以下三种方案</p>\n<p>基于数据库：利用数据库事务实现 for update 乐观锁</p>\n<p>优点及缺点：不需要引入新依赖，但性能取决于数据库读写所以不适合高并发分布式锁</p>\n<p>基于缓存：redis 分布式锁 etcd 分布式锁</p>\n<p>redis：redis 性能极强 但单机 redis 不具备 HA 分布式 redis 选举时会出现 master-slave 数据不同步的情况 会出现锁失效的情况</p>\n<p>etcd：性能较 redis 弱 但是远强于 zk 方案  适合云原生环境部署 并且满足高可用 强一致性</p>\n<p>基于 Zookeeper 临时节点：zookeeper 分布式锁</p>\n<p>zk 方案实现了 CP 保证强一致性  不会出现锁失效的情况 但是牺牲了可用性 不满足 HA 并且 zk 维护较为复杂不适合云原生方案</p>\n<h1 id=\"分布式锁实现原理及etcd方案\"><a class=\"anchor\" href=\"#分布式锁实现原理及etcd方案\">#</a> 分布式锁实现原理及 etcd 方案</h1>\n<p>分布式实现主要依赖以下几个牵扯到锁的原理</p>\n<p>1. 载体 例如 redis 的载体是 kv  zookeeper 使用的是临时的文件系统</p>\n<p>2. 租期 服务进程持有分布式锁之后需要有一个持有时间 即超时后自动释放 zk 临时节点可以被删除 redis 使用的是缓存 ttl 机制</p>\n<p>3. 锁机制 例如可重入机制、公平机制、减少惊群效应（某个 lock 释放后会换新所有 lock 上的线程 争抢此 lock）等等</p>\n<p>etcd 实现以上三点实现 具体是以下方案</p>\n<p>载体：etcd 是一个分层的多级 kv（有点像 zk 临时节点的 path）</p>\n<p>租期：通过 lease 对 kv 设置租期，租期到期 锁失效</p>\n<p>自动续期：使用 KeepAlive 实现租约自动续期</p>\n<p>公平锁：多个进程同时争抢锁时 可以根据 <code>Revision</code>  值 大小依次获得锁 有效避免了惊群效应</p>\n<p>Watch 机制：当 Watch 检测到某个 key 及目录变化后，Client 端可以收到通知</p>\n<h1 id=\"client端代码\"><a class=\"anchor\" href=\"#client端代码\">#</a> client 端代码</h1>\n<h2 id=\"java实现\"><a class=\"anchor\" href=\"#java实现\">#</a> Java 实现</h2>\n<p>引用 jetcd 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>io.etcd<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>jetcd-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>0.7.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>代码主体</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>streamingone<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>distribution<span class=\"token punctuation\">.</span>lock</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteSequence</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Client</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Lease</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Lock</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span>lease<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LeaseKeepAliveResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>etcd<span class=\"token punctuation\">.</span>jetcd<span class=\"token punctuation\">.</span>lock<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LockResponse</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>grpc<span class=\"token punctuation\">.</span>stub<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StreamObserver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log4j2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>charset<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @author JoyseeKing</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @date 2023/04/07/18:03</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * @description 使用 etcd 实现分布式锁</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token annotation punctuation\">@Log4j2</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EtcdLock</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Client</span> client<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Lock</span> lockClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Lease</span> leaseClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LockStates</span> lockStates<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;etcd.endpoint:http://localhost:2379&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> endpoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">EtcdLock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> lockKey<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> leaseTTL<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span> unit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">endpoints</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockClient <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getLockClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>leaseClient <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LockStates</span><span class=\"token punctuation\">(</span>lockKey<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">.</span><span class=\"token function\">toSeconds</span><span class=\"token punctuation\">(</span>leaseTTL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// 正常释放锁</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLockPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                lockClient<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteSequence</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLockPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token comment\">// 如果是主动续约，则关闭续约的定时任务</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">// 删除租约</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                leaseClient<span class=\"token punctuation\">.</span><span class=\"token function\">revoke</span><span class=\"token punctuation\">(</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">ExecutionException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">//todo: 异常处理</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程：&#123;&#125; 释放锁\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">// 创建一个租约</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createLease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[etcd-lock]: start to createLease.\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLockKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">long</span> leaseId <span class=\"token operator\">=</span> leaseClient<span class=\"token punctuation\">.</span><span class=\"token function\">grant</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseTTL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">setLeaseId</span><span class=\"token punctuation\">(</span>leaseId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token comment\">// 自动续约</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\">StreamObserver</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LeaseKeepAliveResponse</span><span class=\"token punctuation\">></span></span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StreamObserver</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LeaseKeepAliveResponse</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LeaseKeepAliveResponse</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cluster node lease remaining ttl: &#123;&#125;, lease id: &#123;&#125;\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getTTL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cluster node lease keep alive failed. exception info: &#123;&#125;\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cluster node lease completed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token comment\">// 设置自动续约</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            leaseClient<span class=\"token punctuation\">.</span><span class=\"token function\">keepAlive</span><span class=\"token punctuation\">(</span>leaseId<span class=\"token punctuation\">,</span> observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">ExecutionException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[etcd-lock] Create lease failed:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Create lease failed:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token class-name\">String</span> lockKey <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLockKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[etcd-lock]: start to createLock.\"</span> <span class=\"token operator\">+</span> lockKey <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token class-name\">LockResponse</span> lockResponse <span class=\"token operator\">=</span> lockClient<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteSequence</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>lockKey<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lockResponse <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                <span class=\"token class-name\">String</span> lockPath <span class=\"token operator\">=</span> lockResponse<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">setLockPath</span><span class=\"token punctuation\">(</span>lockPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程：&#123;&#125; 加锁成功，锁路径：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lockPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">setLocked</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">ExecutionException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[etcd-lock] lock failed:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[etcd-lock] lock failed:\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            leaseClient<span class=\"token punctuation\">.</span><span class=\"token function\">revoke</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockStates<span class=\"token punctuation\">.</span><span class=\"token function\">getLeaseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">LockStates</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> lockKey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> lockPath<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> leaseTTL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> leaseId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> isLocked<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LockStates</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> lockKey<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> leaseTTL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lockKey <span class=\"token operator\">=</span> lockKey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>leaseTTL <span class=\"token operator\">=</span> leaseTTL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go实现\"><a class=\"anchor\" href=\"#go实现\">#</a> Go 实现</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"context\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tclientv3 <span class=\"token string\">\"go.etcd.io/etcd/client/v3\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">\"go.etcd.io/etcd/client/v3/concurrency\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token string\">\"log\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"time\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 初始化客户端</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tclient<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> clientv3<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>clientv3<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>Endpoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"localhost:2379\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> DialTimeout<span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>Second <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client connect failed :%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 创建一个 session 并设置租期 30s (内部会自动续期 Etcd KeepAlive)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tsession<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> concurrency<span class=\"token punctuation\">.</span><span class=\"token function\">NewSession</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> concurrency<span class=\"token punctuation\">.</span><span class=\"token function\">WithTTL</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"session init failes:%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>session <span class=\"token operator\">*</span>concurrency<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\terr <span class=\"token operator\">:=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"session close :%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">// 获取指定前缀的锁对象</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tmutex <span class=\"token operator\">:=</span> concurrency<span class=\"token punctuation\">.</span><span class=\"token function\">NewMutex</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> <span class=\"token string\">\"biz-lock\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// 加锁默认等待 3s</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tctx<span class=\"token punctuation\">,</span> cancel <span class=\"token operator\">:=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">WithTimeout</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">defer</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\terr <span class=\"token operator\">=</span> mutex<span class=\"token punctuation\">.</span><span class=\"token function\">TryLock</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lock failed :%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">// 执行业务</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"biz execed %%%d ...\"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 释放锁</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\terr <span class=\"token operator\">=</span> mutex<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">TODO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cluster node lease failed :%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cluster node lease\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "分布式",
                "中间件",
                "etcd"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2023/06/14/skywalking%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "url": "http://joyseeking.github.io/2023/06/14/skywalking%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",
            "title": "Skywalking 基本使用方式",
            "date_published": "2023-06-14T13:01:52.930Z",
            "content_html": "<h1 id=\"agent-引入\"><a class=\"anchor\" href=\"#agent-引入\">#</a> agent 引入</h1>\n<p>agent 版本需要对应 project 中的依赖 version log4shell 相关漏洞在 8.9.0 以上版本修复的 所以推荐选用 8.9.0 或 9.0.0 以上版本</p>\n<h1 id=\"java应用开发\"><a class=\"anchor\" href=\"#java应用开发\">#</a> java 应用开发</h1>\n<p>使用 java 进行应用开发时 可以直接使用以下 pom 引入相关依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.skywalking<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>apm-toolkit-log4j-2.x<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;skywalking-version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.skywalking<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>apm-toolkit-trace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;skywalking-version&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"日志使用\"><a class=\"anchor\" href=\"#日志使用\">#</a> 日志使用</h1>\n<p>TraceID 可以绑定日志并且在全文中输出 TraceID</p>\n<p>log4j2 配置 xml 以在日志输出中添加 TraceID</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Configuration</span> <span class=\"token attr-name\">status</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>INFO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Appenders</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Console</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SYSTEM_OUT<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token comment\">&lt;!-- 在 pattern 中增加 [% traceId]  来打印 TraceID --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PatternLayout</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%d&#123;HH:mm:ss.SSS&#125; [%t] [%C] [%traceId] %-5level -  %m%n<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Console</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Appenders</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Loggers</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>INFO<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">includeLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AppenderRef</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Root</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Loggers</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>全文打印</p>\n<p><code>String traceId = TraceContext.*traceId*();</code></p>\n<h1 id=\"配置文件及插件\"><a class=\"anchor\" href=\"#配置文件及插件\">#</a> 配置文件及插件</h1>\n<h2 id=\"主配置文件\"><a class=\"anchor\" href=\"#主配置文件\">#</a> 主配置文件</h2>\n<p>文件目录 skywalking/config/agent.config 只写几个比较有意义的</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#修改 collector endpoint</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>collector.backend_service=$<span class=\"token punctuation\">&#123;</span>SW_AGENT_COLLECTOR_BACKEND_SERVICES<span class=\"token punctuation\">:</span>xxx<span class=\"token punctuation\">:</span><span class=\"token number\">9002</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#修改认证</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>agent.authentication=$<span class=\"token punctuation\">&#123;</span>SW_AGENT_AUTHENTICATION<span class=\"token punctuation\">:</span>your_authentication<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#采样 -1 为全量</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>agent.sample_n_per_3_secs=$<span class=\"token punctuation\">&#123;</span>SW_AGENT_SAMPLE<span class=\"token punctuation\">:</span><span class=\"token number\">-1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#收集的 grpc 超时时间</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>collector.grpc_upstream_timeout=$<span class=\"token punctuation\">&#123;</span>SW_AGENT_COLLECTOR_GRPC_UPSTREAM_TIMEOUT<span class=\"token punctuation\">:</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#sw 日志的级别 会占盘空间 所以调成 error</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>logging.level=$<span class=\"token punctuation\">&#123;</span>SW_LOGGING_LEVEL<span class=\"token punctuation\">:</span>ERROR<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#输出方式 有 CONSOLE 和 FILE 两种 我这里选择的落盘</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>logging.output=$<span class=\"token punctuation\">&#123;</span>SW_LOGGING_OUTPUT<span class=\"token punctuation\">:</span>FILE<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#单日志文件最大大小</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>logging.max_file_size=$<span class=\"token punctuation\">&#123;</span>SW_LOGGING_MAX_FILE_SIZE<span class=\"token punctuation\">:</span><span class=\"token number\">314572800</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#历史文件保存 0 或负数代表一直保存历史文件</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>logging.max_history_files=$<span class=\"token punctuation\">&#123;</span>SW_LOGGING_MAX_HISTORY_FILES<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"忽略无用指标\"><a class=\"anchor\" href=\"#忽略无用指标\">#</a> 忽略无用指标</h2>\n<p>文件路径 skywalking/config/apm-trace-ignore-plugin.config</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用了 nacos apollo 健康检查及 springcloudgateway 等可以照抄 减少不必要的指标上报</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>trace<span class=\"token punctuation\">.</span>ignore_path<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_AGENT_TRACE_IGNORE_PATH<span class=\"token operator\">:</span><span class=\"token operator\">/</span>health<span class=\"token punctuation\">,</span>GET<span class=\"token operator\">:</span><span class=\"token operator\">/</span>health<span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>notifications<span class=\"token operator\">/</span>v2<span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>eureka<span class=\"token operator\">/</span>apps<span class=\"token operator\">/</span><span class=\"token punctuation\">,</span>GET<span class=\"token operator\">:</span><span class=\"token operator\">/</span>actuator<span class=\"token operator\">/</span>info<span class=\"token punctuation\">,</span>GET<span class=\"token operator\">:</span><span class=\"token operator\">/</span>oauth<span class=\"token operator\">/</span>actuator<span class=\"token operator\">/</span>info<span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>nacos<span class=\"token comment\">/**,/logstores/**,com.xxx.api.gateway.filter.**,/actuator/**,/eureka/**,httpasyncclient/local,HttpAsyncClient/local,/topics/**,org.springframework.cloud.context.properties.**&#125;</span></pre></td></tr></table></figure><h2 id=\"可选的agent\"><a class=\"anchor\" href=\"#可选的agent\">#</a> 可选的 agent</h2>\n<p>注意根据实际的 springcloudgateway 版本号 选择 apm-spring-cloud-gateway 插件 否则会丢失相关指标上报</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apm<span class=\"token operator\">-</span>customize<span class=\"token operator\">-</span>enhance<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar  apm<span class=\"token operator\">-</span>guava<span class=\"token operator\">-</span>cache<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar       apm<span class=\"token operator\">-</span>quartz<span class=\"token operator\">-</span>scheduler<span class=\"token operator\">-</span><span class=\"token number\">2.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar        apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>gateway<span class=\"token operator\">-</span><span class=\"token number\">2.1</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar  apm<span class=\"token operator\">-</span>trace<span class=\"token operator\">-</span>ignore<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>apm<span class=\"token operator\">-</span>ehcache<span class=\"token operator\">-</span><span class=\"token number\">2.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar        apm<span class=\"token operator\">-</span>jackson<span class=\"token operator\">-</span><span class=\"token number\">2.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar       apm<span class=\"token operator\">-</span>sentinel<span class=\"token operator\">-</span><span class=\"token number\">1.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar                apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>gateway<span class=\"token operator\">-</span><span class=\"token number\">3.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar    apm<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.4</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>apm<span class=\"token operator\">-</span>fastjson<span class=\"token operator\">-</span><span class=\"token number\">1.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar       apm<span class=\"token operator\">-</span>kotlin<span class=\"token operator\">-</span>coroutine<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar  apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>annotation<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar           apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>tx<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>apm<span class=\"token operator\">-</span>gson<span class=\"token operator\">-</span><span class=\"token number\">2.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar           apm<span class=\"token operator\">-</span>mybatis<span class=\"token operator\">-</span><span class=\"token number\">3.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar       apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>gateway<span class=\"token operator\">-</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar  apm<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>webflux<span class=\"token operator\">-</span><span class=\"token number\">5.</span>x<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">8.8</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>jar</pre></td></tr></table></figure><p>需要关注对应的配置文件 上文中的 agent.conf 最下方</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all the parameters in MongoDB access<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span> Only trace the operation<span class=\"token punctuation\">,</span> not include parameters<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>mongodb<span class=\"token punctuation\">.</span>trace_param<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_MONGODB_TRACE_PARAM<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre># If set to positive number<span class=\"token punctuation\">,</span> the <span class=\"token string\">`WriteRequest.params`</span> would be truncated to this length<span class=\"token punctuation\">,</span> otherwise it would be completely saved<span class=\"token punctuation\">,</span> which may cause performance problem<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>mongodb<span class=\"token punctuation\">.</span>filter_length_limit<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_MONGODB_FILTER_LENGTH_LIMIT<span class=\"token punctuation\">:</span><span class=\"token number\">256</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all the <span class=\"token function\">DSL</span><span class=\"token punctuation\">(</span>Domain Specific Language<span class=\"token punctuation\">)</span> in ElasticSearch access<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>trace_dsl<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_ELASTICSEARCH_TRACE_DSL<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> the fully qualified method name will be used as the endpoint name instead of the request URL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>springmvc<span class=\"token punctuation\">.</span>use_qualified_name_as_endpoint_name<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_SPRINGMVC_USE_QUALIFIED_NAME_AS_ENDPOINT_NAME<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> the fully qualified method name will be used as the operation name instead of the given operation name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>toolit<span class=\"token punctuation\">.</span>use_qualified_name_as_operation_name<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_TOOLIT_USE_QUALIFIED_NAME_AS_OPERATION_NAME<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre># If set to <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> the parameters of the sql <span class=\"token punctuation\">(</span>typically <span class=\"token string\">`java.sql.PreparedStatement`</span><span class=\"token punctuation\">)</span> would be collected<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>trace_sql_parameters<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_JDBC_TRACE_SQL_PARAMETERS<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre># If set to positive number<span class=\"token punctuation\">,</span> the <span class=\"token string\">`db.sql.parameters`</span> would be truncated to this length<span class=\"token punctuation\">,</span> otherwise it would be completely saved<span class=\"token punctuation\">,</span> which may cause performance problem<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>sql_parameters_max_length<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_JDBC_SQL_PARAMETERS_MAX_LENGTH<span class=\"token punctuation\">:</span><span class=\"token number\">512</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre># If set to positive number<span class=\"token punctuation\">,</span> the <span class=\"token string\">`db.statement`</span> would be truncated to this length<span class=\"token punctuation\">,</span> otherwise it would be completely saved<span class=\"token punctuation\">,</span> which may cause performance problem<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>sql_body_max_length<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_JDBC_SQL_BODY_MAX_LENGTH<span class=\"token punctuation\">:</span><span class=\"token number\">2048</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all the query <span class=\"token function\">parameters</span><span class=\"token punctuation\">(</span>include deleteByIds and deleteByQuery<span class=\"token punctuation\">)</span> in Solr query request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>solrj<span class=\"token punctuation\">.</span>trace_statement<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_SOLRJ_TRACE_STATEMENT<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all the operation parameters in Solr request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>solrj<span class=\"token punctuation\">.</span>trace_ops_params<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_SOLRJ_TRACE_OPS_PARAMS<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all middleware<span class=\"token operator\">/</span>business handlers that are part of the Light4J handler chain <span class=\"token keyword\">for</span> a request<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>light4j<span class=\"token punctuation\">.</span>trace_handler_chain<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_LIGHT4J_TRACE_HANDLER_CHAIN<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> the transaction definition name will be simplified<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>springtransaction<span class=\"token punctuation\">.</span>simplify_transaction_definition_name<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_SPRINGTRANSACTION_SIMPLIFY_TRANSACTION_DEFINITION_NAME<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>#  Threading classes <span class=\"token punctuation\">(</span><span class=\"token string\">`java.lang.Runnable`</span> and <span class=\"token string\">`java.util.concurrent.Callable`</span><span class=\"token punctuation\">)</span> and their subclasses<span class=\"token punctuation\">,</span> including anonymous inner classes whose name match any one of the <span class=\"token string\">`THREADING_CLASS_PREFIXES`</span> <span class=\"token punctuation\">(</span>splitted by <span class=\"token string\">`,`</span><span class=\"token punctuation\">)</span> will be instrumented<span class=\"token punctuation\">,</span> <span class=\"token builtin\">make</span> sure to only specify as narrow prefixes as what you're expecting to instrument<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">`java.`</span> and <span class=\"token string\">`javax.`</span> will be ignored due to safety issues<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>jdkthreading<span class=\"token punctuation\">.</span>threading_class_prefixes<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_JDKTHREADING_THREADING_CLASS_PREFIXES<span class=\"token punctuation\">:</span>com<span class=\"token punctuation\">.</span>imilab<span class=\"token punctuation\">.</span>summer<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>#  This config item controls that whether the Tomcat plugin should collect the parameters of the request<span class=\"token punctuation\">.</span> Also<span class=\"token punctuation\">,</span> activate implicitly in the profiled trace<span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>collect_http_params<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_TOMCAT_COLLECT_HTTP_PARAMS<span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>#  This config item controls that whether the SpringMVC plugin should collect the parameters of the request<span class=\"token punctuation\">,</span> when your Spring application is based on Tomcat<span class=\"token punctuation\">,</span> consider only setting either <span class=\"token string\">`plugin.tomcat.collect_http_params`</span> or <span class=\"token string\">`plugin.springmvc.collect_http_params`</span><span class=\"token punctuation\">.</span> Also<span class=\"token punctuation\">,</span> activate implicitly in the profiled trace<span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>springmvc<span class=\"token punctuation\">.</span>collect_http_params<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_SPRINGMVC_COLLECT_HTTP_PARAMS<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>#  This config item controls that whether the HttpClient plugin should collect the parameters of the request </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>httpclient<span class=\"token punctuation\">.</span>collect_http_params<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_HTTPCLIENT_COLLECT_HTTP_PARAMS<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>#  When <span class=\"token string\">`COLLECT_HTTP_PARAMS`</span> is enabled<span class=\"token punctuation\">,</span> how many characters to keep and send to the OAP backend<span class=\"token punctuation\">,</span> use negative values to keep and send the complete parameters<span class=\"token punctuation\">,</span> NB<span class=\"token punctuation\">.</span> this config item is added <span class=\"token keyword\">for</span> the sake of performance<span class=\"token punctuation\">.</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>http_params_length_threshold<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_HTTP_HTTP_PARAMS_LENGTH_THRESHOLD<span class=\"token punctuation\">:</span><span class=\"token number\">1024</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>#  When <span class=\"token string\">`include_http_headers`</span> declares header names<span class=\"token punctuation\">,</span> this threshold controls the length limitation of all header values<span class=\"token punctuation\">.</span> use negative values to keep and send the complete headers<span class=\"token punctuation\">.</span> Note<span class=\"token punctuation\">.</span> this config item is added <span class=\"token keyword\">for</span> the sake of performance<span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>http_headers_length_threshold<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_HTTP_HTTP_HEADERS_LENGTH_THRESHOLD<span class=\"token punctuation\">:</span><span class=\"token number\">2048</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>#  Set the header names<span class=\"token punctuation\">,</span> which should be collected by the plugin<span class=\"token punctuation\">.</span> Header name must follow <span class=\"token string\">`javax.servlet.http`</span> definition<span class=\"token punctuation\">.</span> Multiple names should be split by comma<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>include_http_headers<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_HTTP_INCLUDE_HTTP_HEADERS<span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>#  This config item controls that whether the Feign plugin should collect the http body of the request<span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>feign<span class=\"token punctuation\">.</span>collect_request_body<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_FEIGN_COLLECT_REQUEST_BODY<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>#  When <span class=\"token string\">`COLLECT_REQUEST_BODY`</span> is enabled<span class=\"token punctuation\">,</span> how many characters to keep and send to the OAP backend<span class=\"token punctuation\">,</span> use negative values to keep and send the complete body<span class=\"token punctuation\">.</span>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>feign<span class=\"token punctuation\">.</span>filter_length_limit<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_FEIGN_FILTER_LENGTH_LIMIT<span class=\"token punctuation\">:</span><span class=\"token number\">1024</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>#  When <span class=\"token string\">`COLLECT_REQUEST_BODY`</span> is enabled and content<span class=\"token operator\">-</span><span class=\"token keyword\">type</span> start with SUPPORTED_CONTENT_TYPES_PREFIX<span class=\"token punctuation\">,</span> collect the body of the request <span class=\"token punctuation\">,</span> multiple paths should be separated by <span class=\"token string\">`,`</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>plugin<span class=\"token punctuation\">.</span>feign<span class=\"token punctuation\">.</span>supported_content_types_prefix<span class=\"token operator\">=</span>$<span class=\"token punctuation\">&#123;</span>SW_PLUGIN_FEIGN_SUPPORTED_CONTENT_TYPES_PREFIX<span class=\"token punctuation\">:</span>application<span class=\"token operator\">/</span>json<span class=\"token punctuation\">,</span>text<span class=\"token operator\">/</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre># If <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> trace all the <span class=\"token function\">influxql</span><span class=\"token punctuation\">(</span>query and write<span class=\"token punctuation\">)</span> in InfluxDB access<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span> is <span class=\"token boolean\">true</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h1 id=\"agent挂载方式及启动命令\"><a class=\"anchor\" href=\"#agent挂载方式及启动命令\">#</a> agent 挂载方式及启动命令</h1>\n<p>k8s 使用 volume 挂载</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /etc/localtime</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> volume<span class=\"token punctuation\">-</span>localtime</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> volume<span class=\"token punctuation\">-</span>skywalking<span class=\"token punctuation\">-</span>agent<span class=\"token punctuation\">-</span>dir</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> skywalking<span class=\"token punctuation\">-</span>agent<span class=\"token punctuation\">-</span>dir</pre></td></tr></table></figure><p>java 启动命令<br />\n <code>java -jar -javaagent:/path/to/skywalking-agent.jar  -Dskywalking.agent.service_name=xxxx xxx.jar</code></p>\n",
            "tags": [
                "中间件",
                "链路追踪",
                "Skywalking"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2023/06/13/Restart/",
            "url": "http://joyseeking.github.io/2023/06/13/Restart/",
            "title": "逃离上海",
            "date_published": "2023-06-13T03:50:55.183Z",
            "content_html": "<h1 id=\"最近的一些想法\"><a class=\"anchor\" href=\"#最近的一些想法\">#</a> 最近的一些想法</h1>\n<p>真的想逃了 闲的发慌 开始投简历<br />\n接下来会把 Notion 的笔记逐渐导到线上 有了 Notion 之后 MarkDown 真的不爱写了<br />\n Anyway 赶紧回北京吧</p>\n",
            "tags": [
                "个人",
                "个人近况"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2021/09/10/skywalking%E7%9A%84Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/",
            "url": "http://joyseeking.github.io/2021/09/10/skywalking%E7%9A%84Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/",
            "title": "Docker内部署SkyWalking",
            "date_published": "2021-09-10T15:22:59.391Z",
            "content_html": "<h1 id=\"1安装docker\"><a class=\"anchor\" href=\"#1安装docker\">#</a> 1. 安装 Docker</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">su</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt-get</span> purge docker</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">apt-get</span> purge docker-ce</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">apt-get</span> remove -y docker-*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> docker</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    apt-transport-https <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    ca-certificates <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">curl</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gnupg-agent <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    software-properties-common</pre></td></tr></table></figure><p>更新 deb 源</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg <span class=\"token operator\">|</span> apt-key <span class=\"token function\">add</span> -</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>add-apt-repository <span class=\"token punctuation\">\\</span>   <span class=\"token string\">\"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\   <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release -cs<span class=\"token variable\">)</span></span> \\   stable\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce docker-ce-cli containerd.io</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>docker --version</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>gpasswd -a 用户名 docker</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>newgrp - docker</pre></td></tr></table></figure><p>修改 docker 远程连接</p>\n<p>编辑此文件 vim /lib/systemd/system/docker.service<br />\n 修改此项 ExecStart 添加参数 -H tcp://0.0.0.0:2375 （端口可以修改成你想要的）<br />\n重载守护进程 systemctl daemon-reload<br />\n 重启 Docker sudo service docker restart</p>\n<h1 id=\"2下载并运行es\"><a class=\"anchor\" href=\"#2下载并运行es\">#</a> 2. 下载并运行 ES</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d --name<span class=\"token operator\">=</span>es7 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-p <span class=\"token number\">9200</span>:9200 -p <span class=\"token number\">9300</span>:9300 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-e <span class=\"token string\">\"discovery.type=single-node\"</span> elasticsearch:7.6.2</pre></td></tr></table></figure><p>测试环境下可 加</p>\n<pre><code>-e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m\n</code></pre>\n<p>限制 JVM 内存</p>\n<h1 id=\"3下载并运行oap\"><a class=\"anchor\" href=\"#3下载并运行oap\">#</a> 3. 下载并运行 oap</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d --name oap <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-e <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span>Asia/Shanghai <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-p <span class=\"token number\">12800</span>:12800 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-p <span class=\"token number\">11800</span>:11800 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>--link es7:es7 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-e <span class=\"token assign-left variable\">SW_STORAGE</span><span class=\"token operator\">=</span>elasticsearch7 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-e <span class=\"token assign-left variable\">SW_STORAGE_ES_CLUSTER_NODES</span><span class=\"token operator\">=</span>es7:9200 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>apache/skywalking-oap-server:8.6.0</pre></td></tr></table></figure><h1 id=\"4下载并运行ui\"><a class=\"anchor\" href=\"#4下载并运行ui\">#</a> 4. 下载并运行 ui</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d --name skywalking-ui <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-e <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span>Asia/Shanghai <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-p <span class=\"token number\">8088</span>:8080 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>--link oap:oap <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-e <span class=\"token assign-left variable\">SW_OAP_ADDRESS</span><span class=\"token operator\">=</span>oap:12800 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>apache/skywalking-ui:8.6.0</pre></td></tr></table></figure><h1 id=\"5运行监听\"><a class=\"anchor\" href=\"#5运行监听\">#</a> 5. 运行监听</h1>\n<p>开发环境下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNoaXZlLmFwYWNoZS5vcmcvZGlzdC9za3l3YWxraW5nLzguNi4wL2FwYWNoZS1za3l3YWxraW5nLWFwbS1lczctOC42LjAudGFyLmd6\">https://archive.apache.org/dist/skywalking/8.6.0/apache-skywalking-apm-es7-8.6.0.tar.gz</span></p>\n<p>tomcat 启动项目 修改 bin 中 catalina.bat</p>\n<p>加入</p>\n<pre><code>set JAVA_OPTS=-javaagent:C:\\Users\\hasee\\Desktop\\apache-skywalking-apm-bin\\agent\\skywalking-agent.jar\n</code></pre>\n<p>Spring 项目</p>\n<p>项目打包 Dockerfile 编写可在项目在根目录加入 agent 文件夹</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ADD</span> agent</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">COPY</span> agent /usr/local/agent</span></pre></td></tr></table></figure><p>启动参数可在 pod 下加入 -javaagent:/usr/local/agent\\skywalking-agent.jar</p>\n",
            "tags": [
                "框架",
                "skywalking",
                "Docker"
            ]
        },
        {
            "id": "http://joyseeking.github.io/2021/09/10/Ubuntu_NodeJs%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%87%E7%BA%A7/",
            "url": "http://joyseeking.github.io/2021/09/10/Ubuntu_NodeJs%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%87%E7%BA%A7/",
            "title": "Ubuntu NodeJs安装与升级",
            "date_published": "2021-09-10T15:18:22.026Z",
            "content_html": "<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> nodejs</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">npm</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>node -v</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> n -g</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> n --stable <span class=\"token function\">which</span> node</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">which</span> node</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">vim</span> /etc/profile</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>XXXXX</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/profile</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "node.js",
                "安装"
            ]
        }
    ]
}